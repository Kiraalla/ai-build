// @import './_variables';

// 保持其他代码不变
// ================== 基础混入 ==================
@mixin generate-utility($property, $values, $prefix: '') {
  @each $key, $value in $values {
    // 使用字符串拼接来避免颜色值插值警告
    .#{$prefix}#{'' + $key} {
      #{$property}: $value;
    }
  }
}

// ================== 核心工具类 ==================
// 颜色系统
@include generate-utility('color', $mapColor, 'text-');
@include generate-utility('background-color', $mapColor, 'bg-');

// 布局系统
.flex {
  display: flex;

  &-col { flex-direction: column; }
  &-wrap { flex-wrap: wrap; }
  &-nowrap { flex-wrap: nowrap; }
}

.grid {
  display: grid;
}

@include generate-utility('grid-template-columns', (
  1: 1fr,
  2: repeat(2, 1fr),
  3: repeat(3, 1fr),
  4: repeat(4, 1fr),
  5: repeat(5, 1fr),
  6: repeat(6, 1fr),
  7: repeat(7, 1fr),
  8: repeat(8, 1fr),
  9: repeat(9, 1fr),
  10: repeat(10, 1fr),
  11: repeat(11, 1fr),
  12: repeat(12, 1fr)
), 'grid-cols-');

@include generate-utility('align-items', (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch
), 'ai-');

@include generate-utility('align-self', (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch
), 'as-');

@include generate-utility('justify-content', (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around
), 'jc-');

@include generate-utility('justify-items', (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch
), 'ji-');
@include generate-utility('justify-self', (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch
), 'js-');
@include generate-utility('gap', (
  0: 0,
  1: $spacing-base,
  2: $spacing-base * 2,
  3: $spacing-base * 3,
  4: $spacing-base * 4,
  5: $spacing-base * 5
), 'gap-');
// 尺寸系统
@for $i from 1 through 16 {
  $value: $i * $spacing-base;
  .w-#{$i} { width: $value; }
  .h-#{$i} { height: $value; }
}

// 间距系统
@for $i from 0 through 16 {
  $value: $i * $spacing-base;
  
  .m-#{$i} { margin: $value; }
  .mx-#{$i} { margin-left: $value; margin-right: $value; }
  .my-#{$i} { margin-top: $value; margin-bottom: $value; }
  .p-#{$i} { padding: $value; }
  .px-#{$i} { padding-left: $value; padding-right: $value; }
  .py-#{$i} { padding-top: $value; padding-bottom: $value; }
  
  @each $dir, $props in (t: top, r: right, b: bottom, l: left) {
    .m#{$dir}-#{$i} { margin-#{$props}: $value; }
    .p#{$dir}-#{$i} { padding-#{$props}: $value; }
  }
}

// 定位系统
.pos {
  @each $pos in relative, absolute, fixed, sticky {
    &-#{$pos} {
      position: $pos;
    }
  }

  &-center {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

// 图片系统
.img {
  &-fluid {
    max-width: 100%;
    height: auto;
    display: block;
  }
  
  @each $fit in cover, contain {
    &-#{$fit} {
      object-fit: $fit;
    }
  }
  
  &-gray {
    filter: grayscale(100%);
  }
}

// 文字工具
.text {
  &-center { text-align: center; }
  &-left { text-align: left; }
  &-right { text-align: right; }
  &-ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}
@for $i from 12 through 48 {
  .font-#{$i} {
    font-size: #{$i}px;
  }
}

// 可见性
.hidden { display: none; }
.visible { overflow: visible; }